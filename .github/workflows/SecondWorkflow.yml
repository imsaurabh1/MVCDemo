name: MVC_MSbuild

on:
   workflow_dispatch:

jobs:
  build:
   env:
    VSWhere_PATH: 'C:\GitHubActions\Runner\WindowsSystem\_tool\vswhere\2.7.1\x64\vswhere.exe'
    ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    MS_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\MSBuild.exe'
   
   runs-on: [self-hosted]

   steps:
    - name: Code Checkout
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

   # - name: Copy MSBuild
    #  run: move-Item "C:\Projects\MSBuild" "C:\GitHub\Runner\_work\_tool\" -Force
      
    - name: Setup VSWhere.exe
      uses: warrenbuckley/Setup-VSWhere@v1
      
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        vswhere-path: 'C:\GitHubActions\Runner\WindowsSystem\_tool\vswhere\2.7.1\x64\'

    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1 
      
   # - name: Setup MSBuild.exe
    #  uses: warrenbuckley/Setup-MSBuild@v1

   # - name: Add msbuild to PATH
    #  uses: microsoft/setup-msbuild@v1.1
     # id: setup_msbuild
      #with:
       # vs-version: "[16.4,)"
        #msbuild-architecture: x64
        #vswhere-path: 'C:\GitHubActions\actions-runner-win-x64-2.284.0\WindowsSystem\_tool\vswhere\2.7.1\x64\vswhere.exe'
    
    - name: echo msbuild path
      run: echo "${{ steps.setup_msbuild.outputs.msbuildPath }}"

    - name: echo MSBuild
      run: msbuild -version
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5  
      with:
           nuget-version: '5.x'
  
    - name: Restore NuGet Packages
      run: nuget restore MVCDemo.sln ;
      
    - name: Build
      run: msbuild "MVCDemo.sln" /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeployOnBuild=true /p:WebPublishMethod=Package 	/p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=..\\ArtifactStaging
      
    - name: Test
      run: dotnet test UnitTestProject\bin\Debug\UnitTestProject.dll --no-restore
      
   # - name: Test 2
    #  run: dotnet test --configuration Release /p:Version=${VERSION} --no-build
      
    #- name: Pack
     # run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .
      
   # - name: Push
    #  run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://nuget.pkg.github.com/acraven/index.json --api-key ${DEC_PAT}
     # env:      
      #  GITHUB_TOKEN: ${{ secrets.DEC_PAT }}

    - name: Publish Files
      run: |
        if (Test-Path C:\GitHubActions\Runner\WindowsSystem\MVCDemo\MVCDemo\MVCDemo\NugetStaging) { Remove-Item C:\GitHubActions\Runner\WindowsSystem\MVCDemo\MVCDemo\MVCDemo\NugetStaging -Force -Recurse }  
        C:\GitHubActions\Runner\WindowsSystem\_tool\nuget.exe\5.11.0\x64\nuget.exe pack C:\GitHubActions\Runner\WindowsSystem\MVCDemo\MVCDemo\MVCDemo\MVCDemo.nuspec -Version 2.0 -OutputDirectory C:\GitHubActions\Runner\WindowsSystem\MVCDemo\MVCDemo\MVCDemo\NugetStaging
      #  nuget source Add -Name "SaurabhPOC" -Source "https://rtfx.aepsc.com/artifactory/libs-release/com/aep/itmp/" -UserName ${{ secrets.ARTIFACTORY_DEPLOY_USERNAME }} -Password ${{ secrets.ARTIFACTORY_DEPLOY_TOKEN }}
     #   nuget push C:\GitHubActions\Runner\WindowsSystem\MVCDemo\MVCDemo\MVCDemo\NugetStaging\MVCDemo.2.0.nupkg -Source "https://rtfx.aepsc.com/artifactory/libs-release/com/aep/itmp/" 








